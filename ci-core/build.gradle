import org.gradle.internal.jvm.Jvm
import org.gradle.plugins.ide.idea.model.IdeaLanguageLevel

buildscript {
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.21.1"
    }
    tasks {
        build.dependsOn 'spotlessApply'
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.27.1"
}

println "Building $project.name with gradle $gradle.gradleVersion on JVM ${Jvm.current()}"
dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    compile group: 'io.projectreactor', name: 'reactor-core', version: '3.3.1.RELEASE'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.2.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.2.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.2.1.RELEASE'

//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch', version: '2.2.4.RELEASE'
//    compile group: 'org.elasticsearch', name: 'elasticsearch', version: "${elasticsearchVersion}"
//    compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: "${elasticsearchVersion}"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit' // excluding junit 4
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure-processor', version: '2.2.1.RELEASE'

    runtime group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all', version: '2.2.0.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-commons', version: '2.2.0.RELEASE'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.0.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
    testImplementation 'com.tngtech.archunit:archunit:0.9.3'
    testImplementation 'de.adesso:junit-insights:1.1.0'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.4.2'
    compile group: 'io.projectreactor.tools', name: 'blockhound-junit-platform', version: '1.0.1.RELEASE'

}

sourceSets {
    main {
        java { srcDirs = ['src/main/java'] }
    }
    test {
        java { srcDirs = ['src/test/java'] }
    }
}

test {
    useJUnitPlatform()
    systemProperty 'de.adesso.junitinsights.enabled', 'true'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.cimicroservices.core.CiCoreApplication'
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file('../out/production')
        testOutputDir = file('../out/test')
        languageLevel = new IdeaLanguageLevel('11')
        jdkName = '11'
        downloadJavadoc = true
        downloadSources = true
    }
}

spotless {
    java {
        encoding 'UTF-8'
        target project.fileTree(project.rootDir) {
            include '**/*.java'
        }
        googleJavaFormat()
    }
}
