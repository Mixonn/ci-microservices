import org.gradle.internal.jvm.Jvm
import org.gradle.plugins.ide.idea.model.IdeaLanguageLevel
import org.springframework.cloud.contract.verifier.config.TestFramework

buildscript {
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.21.1"
    }
    tasks {
        build.dependsOn 'spotlessApply'
        build.finalizedBy 'publishToMavenLocal'
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id "com.diffplug.gradle.spotless"
    id "org.springframework.cloud.contract" version "2.2.2.RELEASE"
    id 'maven-publish'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:2.2.2.RELEASE"
    }
}

sourceCompatibility = 11

println "Building $project.name with gradle $gradle.gradleVersion on JVM ${Jvm.current()}"

dependencies {
    implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.61'
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.61'

    implementation group: 'io.micrometer', name: 'micrometer-core'
    implementation group: 'io.micrometer', name: 'micrometer-registry-graphite'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    runtime group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all', version: '2.2.0.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-commons', version: '2.2.0.RELEASE'


    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.9', ext: 'pom'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
    testImplementation group: 'org.spockframework', name: 'spock-spring', version: '1.3-groovy-2.5'

    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure-processor'

}

contracts {
    testMode = 'MockMvc'
    baseClassForTests = 'com.cimicroservices.deployrunner.BaseMockMvcSpec'
    testFramework = TestFramework.SPOCK

    contractsMode = "LOCAL"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}


sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/test/kotlin"
}

test {
    useJUnitPlatform()
    systemProperty 'de.adesso.junitinsights.enabled', 'true'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.cimicroservices.deployrunner.DeployRunnerApplication'
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file('../out/production')
        testOutputDir = file('../out/test')
        languageLevel = new IdeaLanguageLevel('11')
        jdkName = '11'
        downloadJavadoc = true
        downloadSources = true
    }
}

spotless {
    java {
        encoding 'UTF-8'
        target project.fileTree(project.rootDir) {
            include '**/*.java'
        }
    }
    kotlin {
        ktlint()
        target project.fileTree(project.rootDir) {
            include '**/*.kt'
        }
    }
}
